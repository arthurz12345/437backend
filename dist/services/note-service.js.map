{
  "version": 3,
  "sources": ["../../src/services/note-service.ts"],
  "sourcesContent": ["import { Document } from \"mongoose\";\nimport { Note } from \"./../models/note\";\nimport NoteSchemaModel from \"./../models/mongo/note-schema-model\";\nimport jwt, { Secret, JwtPayload } from 'jsonwebtoken';\nimport bcrypt from \"bcryptjs\";\nimport { Request, Response, NextFunction } from 'express';\n\n\nexport function get(username: String): Promise<Note[]> {\n    return NoteSchemaModel.find({ username })\n    .then((list) => list)\n    .catch((err) => {\n        throw `${username} Not Found`;\n    });\n}\n\nexport function getAllNotes(): Promise<Note[]> {\n    return NoteSchemaModel.find({})\n    .then((list) => list)\n    .catch((err) => {\n        throw `error get all notes - ${err} `;\n    });\n  }\n\nexport function create(note: Note): Promise<Note> {\n    const newNote = new NoteSchemaModel(note);\n    return newNote.save();\n}\n\nexport function deleteNoteById(id: string) {\n    var mongodb = require('mongodb');\n    return new Promise<number>((resolve, reject) => {\n        try\n        {\n            NoteSchemaModel\n            .deleteOne({ \"_id\": new mongodb.ObjectId(id) })\n            .then((deleteResult) => {\n                console.log(deleteResult);\n                resolve(deleteResult.deletedCount); //{ acknowledged: true, deletedCount: 0 }\n            });\n        }\n        catch (err) {\n            throw `error delete note - ${err} `;\n        }\n    });\n  }\n  \n\nexport default { get, getAllNotes, create, deleteNoteById }"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,+BAA4B;AAMrB,SAAS,IAAI,UAAmC;AACnD,SAAO,yBAAAA,QAAgB,KAAK,EAAE,SAAS,CAAC,EACvC,KAAK,CAAC,SAAS,IAAI,EACnB,MAAM,CAAC,QAAQ;AACZ,UAAM,GAAG,QAAQ;AAAA,EACrB,CAAC;AACL;AAEO,SAAS,cAA+B;AAC3C,SAAO,yBAAAA,QAAgB,KAAK,CAAC,CAAC,EAC7B,KAAK,CAAC,SAAS,IAAI,EACnB,MAAM,CAAC,QAAQ;AACZ,UAAM,yBAAyB,GAAG;AAAA,EACtC,CAAC;AACH;AAEK,SAAS,OAAO,MAA2B;AAC9C,QAAM,UAAU,IAAI,yBAAAA,QAAgB,IAAI;AACxC,SAAO,QAAQ,KAAK;AACxB;AAEO,SAAS,eAAe,IAAY;AACvC,MAAI,UAAU,QAAQ,SAAS;AAC/B,SAAO,IAAI,QAAgB,CAAC,SAAS,WAAW;AAC5C,QACA;AACI,+BAAAA,QACC,UAAU,EAAE,OAAO,IAAI,QAAQ,SAAS,EAAE,EAAE,CAAC,EAC7C,KAAK,CAAC,iBAAiB;AACpB,gBAAQ,IAAI,YAAY;AACxB,gBAAQ,aAAa,YAAY;AAAA,MACrC,CAAC;AAAA,IACL,SACO,KAAK;AACR,YAAM,uBAAuB,GAAG;AAAA,IACpC;AAAA,EACJ,CAAC;AACH;AAGF,IAAO,uBAAQ,EAAE,KAAK,aAAa,QAAQ,eAAe;",
  "names": ["NoteSchemaModel"]
}
